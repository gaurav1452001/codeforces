//code with primality test
#include <iostream>
using namespace std;
bool isPrime(int n)
{
    if (n <= 1)
        return false;

    for (int i = 2; i * i <= n; i++)
    {
        if (n % i == 0)
        {
            return false;
        }
    }
    return true;
}
int main()
{
    int t, a, b, d;
    cin >> t;
    while (t--)
    {
        cin >> d;
        a = d + 1;
        while (true)
        {
            if (isPrime(a))
                break;
            else
                a++;
        }
        b = a + d;
        while (true)
        {
            if (isPrime(b))
                break;
            else
                b++;
        }

        cout << a * b << endl;
    }
    return 0;
}
---------------------------------------------------------------------------------------------------------------------------
//code with sieve(easy prime test)
#include <iostream>
#include <vector>
using namespace std;
int main()
{
    const int n = 1e5 + 5;
    vector<bool> is_prime(n + 1, true);
    is_prime[0] = is_prime[1] = false;
    for (int i = 2; i * i <= n; i++)
    {
        if (is_prime[i])
        {
            for (int j = i * i; j <= n; j += i)
                is_prime[j] = false;
        }
    }
    int t, a, b, d;
    cin >> t;
    while (t--)
    {
        cin >> d;
        a = d + 1;
        while (true)
        {
            if (is_prime[a])
                break;
            else
                a++;
        }
        b = a + d;
        while (true)
        {
            if (is_prime[b])
                break;
            else
                b++;
        }

        cout << a * b << endl;
    }
    return 0;
}
